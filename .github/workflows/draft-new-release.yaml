name: "Draft New Release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The release version"
        required: true

jobs:
  draft_new_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create release branch
        run: git checkout -b release/${{ github.event.inputs.version }}

      - name: Update changelog
        uses: thomaseizinger/keep-a-changelog-new-release@1.1.0
        with:
          version: ${{ github.event.inputs.version }}

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Bump version in package.json
        run: |
          echo "Bumping version in helm chart to ${{ github.event.inputs.version }}"

      - name: Commit changelog and manifest files
        id: make-commit
        run: |
          git add CHANGELOG.md 
          git commit --message "Prepare release ${{ github.event.inputs.version }}"

          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Push new branch
        run: git push origin release/${{ github.event.inputs.version }}

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: release/${{ github.event.inputs.version }}
          base: main
          title: Release version ${{ github.event.inputs.version }}
          reviewers: ${{ github.actor }} 
          body: |
            Hi @${{ github.actor }}! ðŸ‘‹

            This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
            I've updated the changelog and bumped the versions in the manifest files in this commit: ${{ steps.make-commit.outputs.commit }}.

            Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.

  build_and_deploy_stage:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        run: |
          VERSION=${{ github.event.inputs.version }}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lower case owner name
        run: |
          echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
        env:
          REPO: "${{ github.repository }}"

      - name: Set commit sha
        run: |
          echo "COMMIT_SHA=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV

      - name: Build and push Version
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            APP_VERSION="${{env.COMMIT_SHA}}-stage"
            APP_GIT_COMMIT=${{env.COMMIT_SHA}}
            APP_GIT_BRANCH=${{steps.extract_branch.outputs.branch}}
            APP_BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          file: ./.docker/Dockerfile.stage
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ env.REPO_LC }}-stage:${{ env.RELEASE_VERSION }}-preview, ghcr.io/${{ env.REPO_LC }}-stage:latest, ghcr.io/${{ env.REPO_LC }}-stage:${{ env.COMMIT_SHA }}

      - name: Delete tag
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: stage-deployment  
          github_token: ${{ secrets.GITHUB_TOKEN }} 

      - name: Create tag
        run: git tag -fa 'stage-deployment' -m "Update tag to commit ${{ env.COMMIT_SHA }}"

      - name: Push tag
        run: git push origin tag stage-deployment
